#include <iostream>
#include <vector>
#include <unordered_set>
#include <string>

using namespace std;

string vecToString(const vector<int>& vec) {
	string result;
	for (int num : vec) {
		result += to_string(num) + ",";
	}
	return result;
}

int main()
{

	int n, d = 1, sum = 0;
	cin >> n;
	vector<int> vec(n);
	for (int i = 0; i < n; i++)
	{
		cin >> vec[i];
	}
	vector<int> perv = vec;
	for (int i = 0; i < n; i++)
	{
		if (vec[i] != 1)
		{
			d = 0;

		}
	}
	unordered_set<string> seen;
	while (true)
	{
		if (d == 1)
		{
			break;
		}
		
		string currentState = vecToString(vec);
		if (seen.count(currentState) > 0) {
			cout << -1; 
			break;
		}
		seen.insert(currentState);
		int m = 1;
		for (int i = 0; i < n; i++)
		{
			if (vec[i] != 1)
				m = 0;
			if (vec[i] % 2 == 0)
			{
				vec[i] = vec[i] / 2;
			}
			else if (vec[i] % 2 == 1)
			{
				vec[i] = (3 * vec[i]) + 1;
			}
		}
		if (m == 1)
		{
			cout << sum;
			break;
		}
		if (perv == vec)
		{
			cout << -1;
			break;
		}
		sum += 1;
	}
	if (d == 1)
	{
		cout << 0;
	}
	

}
